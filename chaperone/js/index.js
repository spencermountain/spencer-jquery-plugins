// Generated by CoffeeScript 1.6.3
(function($) {
  var shuffle;
  shuffle = function(a) {
    var i, j, _i, _ref, _ref1;
    for (i = _i = _ref = a.length - 1; _ref <= 1 ? _i <= 1 : _i >= 1; i = _ref <= 1 ? ++_i : --_i) {
      j = Math.floor(Math.random() * (i + 1));
      _ref1 = [a[j], a[i]], a[i] = _ref1[0], a[j] = _ref1[1];
    }
    return a;
  };
  $.chaperone = function(count, max, min_distance) {
    var last, random, _i, _results;
    if (count == null) {
      count = 10;
    }
    if (max == null) {
      max = 10;
    }
    if (min_distance == null) {
      min_distance = 1;
    }
    random = function(max) {
      return Math.floor(Math.random() * max);
    };
    last = 0;
    return (function() {
      _results = [];
      for (var _i = 0; 0 <= count ? _i < count : _i > count; 0 <= count ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this).map(function(i) {
      var r, x, _i;
      for (x = _i = 0; 0 <= max ? _i < max : _i > max; x = 0 <= max ? ++_i : --_i) {
        r = random(max);
        if (!(last <= r + min_distance && last > r - min_distance)) {
          last = r;
          return r;
        }
      }
      return random(max);
    });
  };
  return $.socialist = function(count, max) {
    var all, shuffled, _i, _ref, _results;
    if (count == null) {
      count = 10;
    }
    if (max == null) {
      max = 10;
    }
    shuffled = function(max) {
      var _i, _results;
      return shuffle((function() {
        _results = [];
        for (var _i = 0; 0 <= max ? _i < max : _i > max; 0 <= max ? _i++ : _i--){ _results.push(_i); }
        return _results;
      }).apply(this));
    };
    all = [];
    (function() {
      _results = [];
      for (var _i = 0, _ref = count / max; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this).map(function(i) {
      var arr, x, _i;
      for (x = _i = 0; 0 <= max ? _i < max : _i > max; x = 0 <= max ? ++_i : --_i) {
        arr = shuffled(max).slice(0, max);
        all = all.concat(arr);
        if (all.length >= count) {
          return all;
        }
      }
    });
    return all;
  };
})(jQuery);

/*
//@ sourceMappingURL=index.map
*/
