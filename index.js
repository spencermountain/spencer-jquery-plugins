/*! spencer-jquery 
 by @spencermountain
 2013-06-18 */
// Generated by CoffeeScript 1.6.3
$(function() {
  return $.fn.firebase = function() {
    var init, update, uuid;
    uuid = function(length) {
      var id;
      if (length == null) {
        length = 7;
      }
      id = "";
      while (id.length < length) {
        id += Math.random().toString(36).substr(2);
      }
      return "id" + id.substr(0, length);
    };
    init = function(account, namespace) {
      if (namespace == null) {
        namespace = uuid();
      }
      root.fb = new Firebase("http://" + account + ".firebaseio.com").child(namespace);
      return $(".mack").each(function(i, d) {
        var el, key;
        el = $(this);
        key = el.attr("id") || ("mackid" + i);
        el.attr("mack-id", key);
        el.val();
        el.focusout(function() {
          return update();
        });
        return root.fb.on("value", function(snapshot) {
          var obj;
          obj = snapshot.val() || {};
          return Object.keys(obj).forEach(function(key) {
            return $("input[mack-id=\"" + key + "\"]").val(obj[key]);
          });
        });
      });
    };
    update = function() {
      var obj;
      obj = {};
      $(".mack").each(function(i, d) {
        var el;
        el = $(this);
        return obj[el.attr("mack-id")] = el.val() || el.html();
      });
      return root.fb.set(obj);
    };
    return init();
  };
});

(function($) {

	$.fn.greek = function(text, options) {

  }

	$.fn.ungreek = function(text, options) {
		return text
  }

})( jQuery );
(function($) {

	function segment(text, fraction) {
			fraction = fraction / 100;
			var end = parseInt(text.length * fraction)
			return text.substring(0, end)
		}

		function render_defaults(txt, options) {
			options.normalize_to = options.normalise_to || txt.length;
			options.normalize_to = 100;
			if (typeof options.normalize_to == "string") {
				options.normalize_to = options.normalize_to.length;
			}
			var percentage = txt.length / options.normalize_to;
			var defaults = {
				duration: (options.duration || 1000) * percentage,
				humanize: false,
				resolution: txt.length,
				cursor: false
			}
			return $.extend(defaults, options);
		}

		function human_defaults(txt, options) {
			var defaults = {
				duration: txt.length * 90,
				humanize: true,
				resolution: txt.length,
				cursor: true
			}
			return $.extend(defaults, options);
		}


	$.fn.handsome = function(txt, options, callback) {
		options = options || {};
		if (typeof options == "function") {
			callback = options;
			options = {};
		}
		if (options.human) {
			options = human_defaults(txt, options)
		} else {
			options = render_defaults(txt, options)
		}
		var steps = options.duration / options.resolution;
		var el = this;
		var i = 0;
		var percentage = 0;
		var part = '';
		var last = '';
		var delay = 0;
		(function doit() {
			i++;
			percentage = (i / steps) * 100;
			part = segment(txt, percentage);
			if (part != last) {
				if (options.cursor) {
					part += '|';
				}
				el.html(part)
			}
			if (i < steps) {
				delay = options.duration / steps;
				if (options.humanize) {
					delay += Math.floor(Math.random() * 250) - 100;
				}
				setTimeout(doit, delay)
			} else {
				if (options.cursor) {
					el.text(el.text().replace(/\|$/, ''))
				}
				if (typeof callback == "function") {
					callback();
				}
			}
		})()
	};

})( jQuery );
(function($) {

//skip callbacks during  fast typing
  $.fn.type = function(callback) {
    var timeoutID;
    var el = this;
    this.keyup(function() {
      window.clearTimeout(timeoutID);
      timeoutID = window.setTimeout(function() {
        callback(el.val())
        return el;
      }, 700);
    });
  }

})( jQuery );
(function($) {

	$.fn.waist = function(text, options) {
		text=text||this.text();
		if(!text){return}
		options=options||{};
		options.min=options.min||8
		options.height=options.height||this.height()||200;
		options.width=options.width||this.width()||200;
		var room=Math.floor(options.width/text.length);
		//find out how wide these letters are when rendered
		$('body').append('<span id="tmp" style="opacity:0.0; font-size:10px;">'+text+'</span>')
		var avg=Math.ceil($("#tmp").width()/text.length)
		$("#tmp").remove()
		var font=Math.floor(room/(avg/10));
		if(font>options.height){
			font=options.height;
		}
		if(font<options.min){
			font=options.min
		}
		this.text(text)
		this.css('font-size',parseInt(font))
}

})( jQuery );